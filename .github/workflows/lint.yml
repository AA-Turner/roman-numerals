name: Lint

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  UV_SYSTEM_PYTHON: "1"  # make uv do global installs
  RUST_BACKTRACE: "1"
  CARGO_TERM_COLOR: "always"

jobs:
  ruff:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Install Ruff
      uses: astral-sh/ruff-action@v3
      with:
        args: --version

    - name: Lint with Ruff
      run: ruff check python/ --output-format=github

    - name: Format with Ruff
      run: ruff format python/ --diff

  mypy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: latest
        enable-cache: false
    - name: Copy licence file
      run: cp ../LICENCE.rst LICENCE.rst
    - name: Install dependencies
      run: uv pip install ".[lint,test]"
    - name: Type check with mypy
      run: mypy .

  pyright:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: latest
        enable-cache: false
    - name: Copy licence file
      run: cp ../LICENCE.rst LICENCE.rst
    - name: Install dependencies
      run: uv pip install ".[lint,test]"
    - name: Type check with pyright
      run: pyright .

  twine:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: latest
        enable-cache: false
    - name: Install dependencies
      run: uv pip install --upgrade twine build
    - name: Lint with twine
      run: |
        cp ../LICENCE.rst LICENCE.rst
        python -m build .
        twine check dist/*

  rustfmt:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust/

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Format with rustfmt
      run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust/

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Lint with clippy
      run: cargo clippy --all-targets -- -D warnings --allow deprecated
